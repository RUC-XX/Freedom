@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>地图</title>
    <style>
        body {
            margin: 0;
            font: 13px/1.5 "Microsoft YaHei", "Helvetica Neue", "Sans-Serif";
            min-height: 960px;
            min-width: 600px;
        }

        .my-map {
            margin: 0 auto;
            width: 600px;
            height: 600px;
        }

            .my-map .icon {
                background: url(http://lbs.amap.com/console/public/show/marker.png) no-repeat;
            }

            .my-map .icon-cir {
                height: 31px;
                width: 28px;
            }

            .my-map .icon-cir-red {
                background-position: -11px -5px;
            }
    </style>
</head>
<body>
    <div id="wrap" class="my-map">
        <div id="mapContainer"></div>

    </div>
    <script src="http://webapi.amap.com/maps?v=1.2&key=8325164e247e15eea68b59e89200988b"></script>
    <script>
        !function () {
            var infoWindow, map, level = 17,
                center = { lng: 116.314273, lat: 39.968989 },
                features = [{ type: "Marker", name: "教学二楼", desc: "", color: "red", icon: "cir", offset: { x: -9, y: -31 }, lnglat: { lng: 116.314938, lat: 39.968635 } },
                    { type: "Marker", name: "教学一楼", desc: "", color: "red", icon: "cir", offset: { x: -9, y: -31 }, lnglat: { lng: 116.316708, lat: 39.968742 } },
                    { type: "Marker", name: "教学三楼", desc: "", color: "red", icon: "cir", offset: { x: -9, y: -31 }, lnglat: { lng: 116.313339, lat: 39.968602 } }];

            function loadFeatures() {
                for (var feature, data, i = 0, len = features.length, j, jl, path; i < len; i++) {
                    data = features[i];
                    switch (data.type) {
                        case "Marker":
                            feature = new AMap.Marker({
                                map: map, position: new AMap.LngLat(data.lnglat.lng, data.lnglat.lat),
                                zIndex: 3, extData: data, offset: new AMap.Pixel(data.offset.x, data.offset.y), title: data.name,
                                content: '<div class="icon icon-' + data.icon + ' icon-' + data.icon + '-' + data.color + '"></div>'
                            });
                            break;
                        case "Polyline":
                            for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                                path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                            }
                            feature = new AMap.Polyline({
                                map: map, path: path, extData: data, zIndex: 2,
                                strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity
                            });
                            break;
                        case "Polygon":
                            for (j = 0, jl = data.lnglat.length, path = []; j < jl; j++) {
                                path.push(new AMap.LngLat(data.lnglat[j].lng, data.lnglat[j].lat));
                            }
                            feature = new AMap.Polygon({
                                map: map, path: path, extData: data, zIndex: 1,
                                strokeWeight: data.strokeWeight, strokeColor: data.strokeColor, strokeOpacity: data.strokeOpacity,
                                fillColor: data.fillColor, fillOpacity: data.fillOpacity
                            });
                            break;
                        default: feature = null;
                    }
                    if (feature) { AMap.event.addListener(feature, "click", mapFeatureClick); }
                }
            }

            function mapFeatureClick(e) {
                if (!infoWindow) { infoWindow = new AMap.InfoWindow({ autoMove: true }); }
                var extData = e.target.getExtData();
                infoWindow.setContent("<h5>" + extData.name + "</h5><div>" + extData.desc + "</div>");
                infoWindow.open(map, e.lnglat);
            }

            map = new AMap.Map("mapContainer", { center: new AMap.LngLat(center.lng, center.lat), level: level });
            new AMap.Buildings({ map: map, zIndex: 2 });
            loadFeatures();
            map.plugin(["AMap.ToolBar", "AMap.OverView", "AMap.Scale"], function () {
                map.addControl(new AMap.ToolBar);
                map.addControl(new AMap.OverView({ isOpen: true }));
                map.addControl(new AMap.Scale);
            });
        }();
    </script>
</body>
</html>
